| =c/postgres          +|
|           |          |          |         |         | postgres=CTc/postgres |
+-----------+----------+----------+---------+---------+-----------------------+
(3 rows)

postgres=> \l
postgres=>                                  List of databases
+-----------+--------------+----------+---------+---------+-----------------------+
|   Name    |    Owner     | Encoding | Collate |  Ctype  |   Access privileges   |
+-----------+--------------+----------+---------+---------+-----------------------+
| postgres  | postgres     | UTF8     | C.UTF-8 | C.UTF-8 |                       |
| students  | freecodecamp | UTF8     | C.UTF-8 | C.UTF-8 |                       |
| template0 | postgres     | UTF8     | C.UTF-8 | C.UTF-8 | =c/postgres          +|
|           |              |          |         |         | postgres=CTc/postgres |
| template1 | postgres     | UTF8     | C.UTF-8 | C.UTF-8 | =c/postgres          +|
|           |              |          |         |         | postgres=CTc/postgres |
+-----------+--------------+----------+---------+---------+-----------------------+
(4 rows)


postgres=> \c students
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
You are now connected to database "students" as user "freecodecamp".
students=> \d
students=>                       List of relations
+--------+-------------------------+----------+--------------+
| Schema |          Name           |   Type   |    Owner     |
+--------+-------------------------+----------+--------------+
| public | courses                 | table    | freecodecamp |
| public | courses_course_id_seq   | sequence | freecodecamp |
| public | majors                  | table    | freecodecamp |
| public | majors_courses          | table    | freecodecamp |
| public | majors_major_id_seq     | sequence | freecodecamp |
| public | students                | table    | freecodecamp |
| public | students_student_id_seq | sequence | freecodecamp |
+--------+-------------------------+----------+--------------+
(7 rows)

\d stidem
Did not find any relation named "stidem".
students=> \d students
                                          Table "public.students"
+------------+-----------------------+-----------+----------+----------------------------------------------+
|   Column   |         Type          | Collation | Nullable |                   Default                    |
+------------+-----------------------+-----------+----------+----------------------------------------------+
| student_id | integer               |           | not null | nextval('students_student_id_seq'::regclass) |
| first_name | character varying(50) |           | not null |                                              |
| last_name  | character varying(50) |           | not null |                                              |
| major_id   | integer               |           |          |                                              |
| gpa        | numeric(2,1)          |           |          |                                              |
+------------+-----------------------+-----------+----------+----------------------------------------------+
Indexes:
    "students_pkey" PRIMARY KEY, btree (student_id)
Foreign-key constraints:
    "students_major_id_fkey" FOREIGN KEY (major_id) REFERENCES majors(major_id)

students=> SELECT * FROM students
students-> ;
                              
+------------+------------+--------------+----------+-----+
| student_id | first_name |  last_name   | major_id | gpa |
+------------+------------+--------------+----------+-----+
|          6 | Rhea       | Kellems      |       36 | 2.5 |
|          7 | Emma       | Gilbert      |          |     |
|          8 | Kimberly   | Whitley      |       37 | 3.8 |
|          9 | Jimmy      | Felipe       |       36 | 3.7 |
|         10 | Kyle       | Stimson      |          | 2.8 |
|         11 | Casares    | Hijo         |       41 | 4.0 |
|         12 | Noe        | Savage       |          | 3.6 |
|         13 | Sterling   | Boss         |       41 | 3.9 |
|         14 | Brian      | Davis        |          | 2.3 |
|         15 | Kaija      | Uronen       |       41 | 3.7 |
|         16 | Faye       | Conn         |       41 | 2.1 |
|         17 | Efren      | Reilly       |       37 | 3.9 |
|         18 | Danh       | Nhung        |          | 2.4 |
|         19 | Maxine     | Hagenes      |       36 | 2.9 |
|         20 | Larry      | Saunders     |       38 | 2.2 |
|         21 | Karl       | Kuhar        |       37 |     |
|         22 | Lieke      | Hazenveld    |       41 | 3.5 |
|         23 | Obie       | Hilpert      |       37 |     |
|         24 | Peter      | Booysen      |          | 2.9 |
|         25 | Nathan     | Turner       |       36 | 3.3 |
|         26 | Gerald     | Osiki        |       38 | 2.2 |
|         27 | Vanya      | Hassanah     |       41 | 4.0 |
|         28 | Roxelana   | Florescu     |       36 | 3.2 |
|         29 | Helene     | Parker       |       38 | 3.4 |
|         30 | Mariana    | Russel       |       37 | 1.8 |
|         31 | Ajit       | Dhungel      |          | 3.0 |
|         32 | Mehdi      | Vandenberghe |       36 | 1.9 |
|         33 | Dejon      | Howell       |       37 | 4.0 |
|         34 | Aliya      | Gulgowski    |       42 | 2.6 |
|         35 | Ana        | Tupajic      |       38 | 3.1 |
|         36 | Hugo       | Duran        |          | 3.8 |
+------------+------------+--------------+----------+-----+
(31 rows)

students=> 
students=> 
[1]+  Stopped                 psql --username=freecodecamp --dbname=postgres
camper: /project$ psql --username=freecodecamp --dbname=postgress
Border style is 2.
Title is " ".
Pager usage is off.
psql (12.17 (Ubuntu 12.17-1.pgdg22.04+1))
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
Type "help" for help.

postgres=> \l
                                 List of databases
+-----------+--------------+----------+---------+---------+-----------------------+
|   Name    |    Owner     | Encoding | Collate |  Ctype  |   Access privileges   |
+-----------+--------------+----------+---------+---------+-----------------------+
| postgres  | postgres     | UTF8     | C.UTF-8 | C.UTF-8 |                       |
| students  | freecodecamp | UTF8     | C.UTF-8 | C.UTF-8 |                       |
| template0 | postgres     | UTF8     | C.UTF-8 | C.UTF-8 | =c/postgres          +|
|           |              |          |         |         | postgres=CTc/postgres |
| template1 | postgres     | UTF8     | C.UTF-8 | C.UTF-8 | =c/postgres          +|
|           |              |          |         |         | postgres=CTc/postgres |
+-----------+--------------+----------+---------+---------+-----------------------+
(4 rows)

postgres=> \c students
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
You are now connected to database "students" as user "freecodecamp".
students=> SELECT first_name FROM students;
FATAL:  terminating connection due to administrator command
SSL connection has been closed unexpectedly
server closed the connection unexpectedly
        This probably means the server terminated abnormally
        before or while processing the request.
The connection to the server was lost. Attempting reset: Succeeded.
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
students=> SELECT first_name FROM students;
students=>        
+------------+
| first_name |
+------------+
| Rhea       |
| Emma       |
| Kimberly   |
| Jimmy      |
| Kyle       |
| Casares    |
| Noe        |
| Sterling   |
| Brian      |
| Kaija      |
| Faye       |
| Efren      |
| Danh       |
| Maxine     |
| Larry      |
| Karl       |
| Lieke      |
| Obie       |
| Peter      |
| Nathan     |
| Gerald     |
| Vanya      |
| Roxelana   |
| Helene     |
| Mariana    |
| Ajit       |
| Mehdi      |
| Dejon      |
| Aliya      |
| Ana        |
| Hugo       |
+------------+
(31 rows)

SELECT first_name, last_name, gpa FROM students;
students=>                   
+------------+--------------+-----+
| first_name |  last_name   | gpa |
+------------+--------------+-----+
| Rhea       | Kellems      | 2.5 |
| Emma       | Gilbert      |     |
| Kimberly   | Whitley      | 3.8 |
| Jimmy      | Felipe       | 3.7 |
| Kyle       | Stimson      | 2.8 |
| Casares    | Hijo         | 4.0 |
| Noe        | Savage       | 3.6 |
| Sterling   | Boss         | 3.9 |
| Brian      | Davis        | 2.3 |
| Kaija      | Uronen       | 3.7 |
| Faye       | Conn         | 2.1 |
| Efren      | Reilly       | 3.9 |
| Danh       | Nhung        | 2.4 |
| Maxine     | Hagenes      | 2.9 |
| Larry      | Saunders     | 2.2 |
| Karl       | Kuhar        |     |
| Lieke      | Hazenveld    | 3.5 |
| Obie       | Hilpert      |     |
| Peter      | Booysen      | 2.9 |
| Nathan     | Turner       | 3.3 |
| Gerald     | Osiki        | 2.2 |
| Vanya      | Hassanah     | 4.0 |
| Roxelana   | Florescu     | 3.2 |
| Helene     | Parker       | 3.4 |
| Mariana    | Russel       | 1.8 |
| Ajit       | Dhungel      | 3.0 |
| Mehdi      | Vandenberghe | 1.9 |
| Dejon      | Howell       | 4.0 |
| Aliya      | Gulgowski    | 2.6 |
| Ana        | Tupajic      | 3.1 |
| Hugo       | Duran        | 3.8 |
+------------+--------------+-----+
(31 rows)

SELECT first_name, last_name, gpa FROM students WHERE gpa < 2.5;
students=>                   
+------------+--------------+-----+
| first_name |  last_name   | gpa |
+------------+--------------+-----+
| Brian      | Davis        | 2.3 |
| Faye       | Conn         | 2.1 |
| Danh       | Nhung        | 2.4 |
| Larry      | Saunders     | 2.2 |
| Gerald     | Osiki        | 2.2 |
| Mariana    | Russel       | 1.8 |
| Mehdi      | Vandenberghe | 1.9 |
+------------+--------------+-----+
(7 rows)

SELECT first_name, last_name, gpa FROM students WHERE gpa >= 3.8;
                
+------------+-----------+-----+
| first_name | last_name | gpa |
+------------+-----------+-----+
| Kimberly   | Whitley   | 3.8 |
| Casares    | Hijo      | 4.0 |
| Sterling   | Boss      | 3.9 |
| Efren      | Reilly    | 3.9 |
| Vanya      | Hassanah  | 4.0 |
| Dejon      | Howell    | 4.0 |
| Hugo       | Duran     | 3.8 |
+------------+-----------+-----+
(7 rows)

students=> SELECT first_name, last_name, gpa FROM students WHERE gpa != 4.0;
                  
+------------+--------------+-----+
| first_name |  last_name   | gpa |
+------------+--------------+-----+
| Rhea       | Kellems      | 2.5 |
| Kimberly   | Whitley      | 3.8 |
| Jimmy      | Felipe       | 3.7 |
| Kyle       | Stimson      | 2.8 |
| Noe        | Savage       | 3.6 |
| Sterling   | Boss         | 3.9 |
| Brian      | Davis        | 2.3 |
| Kaija      | Uronen       | 3.7 |
| Faye       | Conn         | 2.1 |
| Efren      | Reilly       | 3.9 |
| Danh       | Nhung        | 2.4 |
| Maxine     | Hagenes      | 2.9 |
| Larry      | Saunders     | 2.2 |
| Lieke      | Hazenveld    | 3.5 |
| Peter      | Booysen      | 2.9 |
| Nathan     | Turner       | 3.3 |
| Gerald     | Osiki        | 2.2 |
| Roxelana   | Florescu     | 3.2 |
| Helene     | Parker       | 3.4 |
| Mariana    | Russel       | 1.8 |
| Ajit       | Dhungel      | 3.0 |
| Mehdi      | Vandenberghe | 1.9 |
| Aliya      | Gulgowski    | 2.6 |
| Ana        | Tupajic      | 3.1 |
| Hugo       | Duran        | 3.8 |
+------------+--------------+-----+
(25 rows)

students=> echo "$($PSQL "SELECT first_name, last_name, gpa FROM students WHERE gpa = 4.0")"
students-> SELECT * FROM majors;
ERROR:  syntax error at or near "echo"
LINE 1: echo "$($PSQL "SELECT first_name, last_name, gpa FROM studen...
        ^
students=> SELECT * FROM majors;
                   
+----------+-------------------------+
| major_id |          major          |
+----------+-------------------------+
|       36 | Database Administration |
|       37 | Web Development         |
|       38 | Data Science            |
|       39 | Network Engineering     |
|       40 | Computer Programming    |
|       41 | Game Design             |
|       42 | System Administration   |
+----------+-------------------------+
(7 rows)

students=> SELECT * FROM majors WHERE major = 'Game Design';
students=>              
+----------+-------------+
| major_id |    major    |
+----------+-------------+
|       41 | Game Design |
+----------+-------------+
(1 row)

SELECT * FROM majors WHERE major != 'Game Design';
students=>                    
+----------+-------------------------+
| major_id |          major          |
+----------+-------------------------+
|       36 | Database Administration |
|       37 | Web Development         |
|       38 | Data Science            |
|       39 | Network Engineering     |
|       40 | Computer Programming    |
|       42 | System Administration   |
+----------+-------------------------+
(6 rows)

SELECT * FROM majors WHERE major > 'Game Design';
students=>                   
+----------+-----------------------+
| major_id |         major         |
+----------+-----------------------+
|       37 | Web Development       |
|       39 | Network Engineering   |
|       42 | System Administration |
+----------+-----------------------+
(3 rows)

SELECT * FROM majors WHERE major >= 'Game Design';
students=>                   
+----------+-----------------------+
| major_id |         major         |
+----------+-----------------------+
|       37 | Web Development       |
|       39 | Network Engineering   |
|       41 | Game Design           |
|       42 | System Administration |
+----------+-----------------------+
(4 rows)

SELECT * FROM majors WHERE major < 'G';
                   
+----------+-------------------------+
| major_id |          major          |
+----------+-------------------------+
|       36 | Database Administration |
|       38 | Data Science            |
|       40 | Computer Programming    |
+----------+-------------------------+
(3 rows)

students=> SELECT * FROM students;
                              
+------------+------------+--------------+----------+-----+
| student_id | first_name |  last_name   | major_id | gpa |
+------------+------------+--------------+----------+-----+
|          6 | Rhea       | Kellems      |       36 | 2.5 |
|          7 | Emma       | Gilbert      |          |     |
|          8 | Kimberly   | Whitley      |       37 | 3.8 |
|          9 | Jimmy      | Felipe       |       36 | 3.7 |
|         10 | Kyle       | Stimson      |          | 2.8 |
|         11 | Casares    | Hijo         |       41 | 4.0 |
|         12 | Noe        | Savage       |          | 3.6 |
|         13 | Sterling   | Boss         |       41 | 3.9 |
|         14 | Brian      | Davis        |          | 2.3 |
|         15 | Kaija      | Uronen       |       41 | 3.7 |
|         16 | Faye       | Conn         |       41 | 2.1 |
|         17 | Efren      | Reilly       |       37 | 3.9 |
|         18 | Danh       | Nhung        |          | 2.4 |
|         19 | Maxine     | Hagenes      |       36 | 2.9 |
|         20 | Larry      | Saunders     |       38 | 2.2 |
|         21 | Karl       | Kuhar        |       37 |     |
|         22 | Lieke      | Hazenveld    |       41 | 3.5 |
|         23 | Obie       | Hilpert      |       37 |     |
|         24 | Peter      | Booysen      |          | 2.9 |
|         25 | Nathan     | Turner       |       36 | 3.3 |
|         26 | Gerald     | Osiki        |       38 | 2.2 |
|         27 | Vanya      | Hassanah     |       41 | 4.0 |
|         28 | Roxelana   | Florescu     |       36 | 3.2 |
|         29 | Helene     | Parker       |       38 | 3.4 |
|         30 | Mariana    | Russel       |       37 | 1.8 |
|         31 | Ajit       | Dhungel      |          | 3.0 |
|         32 | Mehdi      | Vandenberghe |       36 | 1.9 |
|         33 | Dejon      | Howell       |       37 | 4.0 |
|         34 | Aliya      | Gulgowski    |       42 | 2.6 |
|         35 | Ana        | Tupajic      |       38 | 3.1 |
|         36 | Hugo       | Duran        |          | 3.8 |
+------------+------------+--------------+----------+-----+
(31 rows)

students=> SELECT * FROM students WHERE last_name < 'M';
                            
+------------+------------+-----------+----------+-----+
| student_id | first_name | last_name | major_id | gpa |
+------------+------------+-----------+----------+-----+
|          6 | Rhea       | Kellems   |       36 | 2.5 |
|          7 | Emma       | Gilbert   |          |     |
|          9 | Jimmy      | Felipe    |       36 | 3.7 |
|         11 | Casares    | Hijo      |       41 | 4.0 |
|         13 | Sterling   | Boss      |       41 | 3.9 |
|         14 | Brian      | Davis     |          | 2.3 |
|         16 | Faye       | Conn      |       41 | 2.1 |
|         19 | Maxine     | Hagenes   |       36 | 2.9 |
|         21 | Karl       | Kuhar     |       37 |     |
|         22 | Lieke      | Hazenveld |       41 | 3.5 |
|         23 | Obie       | Hilpert   |       37 |     |
|         24 | Peter      | Booysen   |          | 2.9 |
|         27 | Vanya      | Hassanah  |       41 | 4.0 |
|         28 | Roxelana   | Florescu  |       36 | 3.2 |
|         31 | Ajit       | Dhungel   |          | 3.0 |
|         33 | Dejon      | Howell    |       37 | 4.0 |
|         34 | Aliya      | Gulgowski |       42 | 2.6 |
|         36 | Hugo       | Duran     |          | 3.8 |
+------------+------------+-----------+----------+-----+
(18 rows)

students=> SELECT * FROM students WHERE last_name < 'M' OR gpa = 3.9;
                            
+------------+------------+-----------+----------+-----+
| student_id | first_name | last_name | major_id | gpa |
+------------+------------+-----------+----------+-----+
|          6 | Rhea       | Kellems   |       36 | 2.5 |
|          7 | Emma       | Gilbert   |          |     |
|          9 | Jimmy      | Felipe    |       36 | 3.7 |
|         11 | Casares    | Hijo      |       41 | 4.0 |
|         13 | Sterling   | Boss      |       41 | 3.9 |
|         14 | Brian      | Davis     |          | 2.3 |
|         16 | Faye       | Conn      |       41 | 2.1 |
|         17 | Efren      | Reilly    |       37 | 3.9 |
|         19 | Maxine     | Hagenes   |       36 | 2.9 |
|         21 | Karl       | Kuhar     |       37 |     |
|         22 | Lieke      | Hazenveld |       41 | 3.5 |
|         23 | Obie       | Hilpert   |       37 |     |
|         24 | Peter      | Booysen   |          | 2.9 |
|         27 | Vanya      | Hassanah  |       41 | 4.0 |
|         28 | Roxelana   | Florescu  |       36 | 3.2 |
|         31 | Ajit       | Dhungel   |          | 3.0 |
|         33 | Dejon      | Howell    |       37 | 4.0 |
|         34 | Aliya      | Gulgowski |       42 | 2.6 |
|         36 | Hugo       | Duran     |          | 3.8 |
+------------+------------+-----------+----------+-----+
(19 rows)

students=> SELECT * FROM students WHERE last_name < 'M' AND gpa = 3.9
students-> SELECT * FROM students WHERE last_name < 'M' AND gpa = 3.9;
[2]+  Stopped                 psql --username=freecodecamp --dbname=postgres
camper: /project$ psql --username=freecodecamp --dbname=postgres
Border style is 2.
Title is " ".
Pager usage is off.
psql (12.17 (Ubuntu 12.17-1.pgdg22.04+1))
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
Type "help" for help.

postgres=> \c students
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
You are now connected to database "students" as user "freecodecamp".
students=> SELECT * FROM students WHERE last_name < 'M' AND gpa = 3.9;
students=>                             
+------------+------------+-----------+----------+-----+
| student_id | first_name | last_name | major_id | gpa |
+------------+------------+-----------+----------+-----+
|         13 | Sterling   | Boss      |       41 | 3.9 |
+------------+------------+-----------+----------+-----+
(1 row)

SELECT * FROM students WHERE last_name < 'M' AND gpa = 3.9 OR gpa < 2.3;
                              
+------------+------------+--------------+----------+-----+
| student_id | first_name |  last_name   | major_id | gpa |
+------------+------------+--------------+----------+-----+
|         13 | Sterling   | Boss         |       41 | 3.9 |
|         16 | Faye       | Conn         |       41 | 2.1 |
|         20 | Larry      | Saunders     |       38 | 2.2 |
|         26 | Gerald     | Osiki        |       38 | 2.2 |
|         30 | Mariana    | Russel       |       37 | 1.8 |
|         32 | Mehdi      | Vandenberghe |       36 | 1.9 |
+------------+------------+--------------+----------+-----+
(6 rows)

students=> SELECT * FROM students WHERE last_name < 'M' AND (gpa = 3.9 OR gpa < 2.3);
students=>                             
+------------+------------+-----------+----------+-----+
| student_id | first_name | last_name | major_id | gpa |
+------------+------------+-----------+----------+-----+
|         13 | Sterling   | Boss      |       41 | 3.9 |
|         16 | Faye       | Conn      |       41 | 2.1 |
+------------+------------+-----------+----------+-----+
(2 rows)

SELECT * FROM courses;'
students=>                        
+-----------+--------------------------------+
| course_id |             course             |
+-----------+--------------------------------+
|        23 | Data Structures and Algorithms |
|        24 | Web Programming                |
|        25 | Database Systems               |
|        26 | Computer Networks              |
|        27 | SQL                            |
|        28 | Machine Learning               |
|        29 | Computer Systems               |
|        30 | Web Applications               |
|        31 | Artificial Intelligence        |
|        32 | Python                         |
|        33 | Object-Oriented Programming    |
|        34 | Calculus                       |
|        35 | Game Architecture              |
|        36 | Algorithms                     |
|        37 | UNIX                           |
|        38 | Server Administration          |
|        39 | Network Security               |
+-----------+--------------------------------+
(17 rows)

SELECT * FROM courses WHERE course LIKE '_lgorithms';
students=>              
+-----------+------------+
| course_id |   course   |
+-----------+------------+
|        36 | Algorithms |
+-----------+------------+
(1 row)

SELECT * FROM courses WHERE course LIKE '%lgorithms';
students=>                        
+-----------+--------------------------------+
| course_id |             course             |
+-----------+--------------------------------+
|        23 | Data Structures and Algorithms |
|        36 | Algorithms                     |
+-----------+--------------------------------+
(2 rows)

SELECT * FROM courses WHERE course LIKE 'Web%';
                
+-----------+------------------+
| course_id |      course      |
+-----------+------------------+
|        24 | Web Programming  |
|        30 | Web Applications |
+-----------+------------------+
(2 rows)

students=> SELECT * FROM courses WHERE course LIKE '_e%';
students=>                    
+-----------+-----------------------+
| course_id |        course         |
+-----------+-----------------------+
|        24 | Web Programming       |
|        30 | Web Applications      |
|        38 | Server Administration |
|        39 | Network Security      |
+-----------+-----------------------+
(4 rows)

SELECT * FROM courses WHERE course LIKE '% %';
                       
+-----------+--------------------------------+
| course_id |             course             |
+-----------+--------------------------------+
|        23 | Data Structures and Algorithms |
|        24 | Web Programming                |
|        25 | Database Systems               |
|        26 | Computer Networks              |
|        28 | Machine Learning               |
|        29 | Computer Systems               |
|        30 | Web Applications               |
|        31 | Artificial Intelligence        |
|        33 | Object-Oriented Programming    |
|        35 | Game Architecture              |
|        38 | Server Administration          |
|        39 | Network Security               |
+-----------+--------------------------------+
(12 rows)

students=> SELECT * FROM courses WHERE course NOT LIKE '% %';
             
+-----------+------------+
| course_id |   course   |
+-----------+------------+
|        27 | SQL        |
|        32 | Python     |
|        34 | Calculus   |
|        36 | Algorithms |
|        37 | UNIX       |
+-----------+------------+
(5 rows)

students=> SELECT * FROM courses WHERE course LIKE '%A%';
students=>                        
+-----------+--------------------------------+
| course_id |             course             |
+-----------+--------------------------------+
|        23 | Data Structures and Algorithms |
|        30 | Web Applications               |
|        31 | Artificial Intelligence        |
|        35 | Game Architecture              |
|        36 | Algorithms                     |
|        38 | Server Administration          |
+-----------+--------------------------------+
(6 rows)

SELECT * FROM courses WHERE course ILIKE '%A%';
students=>                        
+-----------+--------------------------------+
| course_id |             course             |
+-----------+--------------------------------+
|        23 | Data Structures and Algorithms |
|        24 | Web Programming                |
|        25 | Database Systems               |
|        28 | Machine Learning               |
|        30 | Web Applications               |
|        31 | Artificial Intelligence        |
|        33 | Object-Oriented Programming    |
|        34 | Calculus                       |
|        35 | Game Architecture              |
|        36 | Algorithms                     |
|        38 | Server Administration          |
+-----------+--------------------------------+
(11 rows)

SELECT * FROM courses WHERE course NOT ILIKE '%A%';
                 
+-----------+-------------------+
| course_id |      course       |
+-----------+-------------------+
|        26 | Computer Networks |
|        27 | SQL               |
|        29 | Computer Systems  |
|        32 | Python            |
|        37 | UNIX              |
|        39 | Network Security  |
+-----------+-------------------+
(6 rows)

students=> SELECT * FROM courses WHERE course NOT ILIKE '%A%' AND course LIKE '% %';
students=>                  
+-----------+-------------------+
| course_id |      course       |
+-----------+-------------------+
|        26 | Computer Networks |
|        29 | Computer Systems  |
|        39 | Network Security  |
+-----------+-------------------+
(3 rows)

echo "$($PSQL "SELECT last_name FROM students WHERE last_name ILIKE '%sa%' OR last_name LIKE '%r_'")"
students-> 
students=> SELECT * FROM students;
students=> SELECT * FROM students WHERE gpa IS NULL;
students=> SELECT * FROM students WHERE gpa IS NOT NULL;
students=> SELECT * FROM students WHERE major_id IS NULL;
students=> SELECT * FROM students WHERE major_id IS NULL AND gpa IS NOT NULL; 
students=> 
students=> SELECT * FROM students WHERE major_id IS NULL AND gpa IS NULL;
students=> SELECT * FROM students ORDER BY gpa;
FATAL:  terminating connection due to administrator command
SSL connection has been closed unexpectedly
server closed the connection unexpectedly
        This probably means the server terminated abnormally
        before or while processing the request.
The connection to the server was lost. Attempting reset: Succeeded.
SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
students=> SELECT * FROM students ORDER BY gpa;
students=> SELECT * FROM students ORDER BY gpa DESC;
students=> SELECT * FROM students ORDER BY gpa DESC;
students=> SELECT * FROM students ORDER BY gpa DESC;
students=> 
students=> SELECT * FROM students ORDER BY gpa DESC, first_name;
students=> SELECT * FROM students ORDER BY gpa DESC, first_name LIMIT 10;
students=> SELECT * FROM students WHERE gpa IS NOT NULL ORDER BY gpa DESC, first_name LIMIT 10;
students=> SELECT MIN(gpa) FROM students;
students=> SELECT MAX(gpa) FROM students;
students=> SELECT SUM(major_id) FROM students;
students=> SELECT AVG(major_id) FROM students;
students=> SELECT CEIL(AVG(major_id)) FROM students;
students=> SELECT ROUND(AVG(major_id)) FROM students;
students=> SELECT ROUND(AVG(major_id), 5) FROM students;
students=> SELECT COUNT(*) FROM majors;
students=> SELECT COUNT(*) FROM students;
students=> SELECT COUNT(major_id) FROM students;
students=> SELECT DISTINCT(major_id) FROM students;
students=> SELECT major_id FROM students GROUP BY major_id;
students=> SELECT major_id, COUNT(*) FROM students GROUP BY major_id; 
students=> SELECT major_id, MIN(gpa) FROM students GROUP BY major_id; 
students=> SELECT major_id, MIN(gpa), MAX(gpa) FROM students GROUP BY major_id;
students=> SELECT major_id, MIN(gpa), MAX(gpa) FROM students GROUP BY major_id HAVING MAX(gpa) = 4.0;
students=> SELECT major_id, MIN(gpa) AS min_gpa, MAX(gpa) FROM students GROUP BY major_id HAVING MAX(gpa) = 4.0;
students=> SELECT major_id, MIN(gpa) AS min_gpa, MAX(gpa) AS max_gpa FROM students GROUP BY major_id HAVING MAX(gpa) = 4.0;
students=> SELECT major_id, COUNT(*) AS number_of_students FROM students GROUP BY major_id;
students=> SELECT major_id, COUNT(*) AS number_of_students FROM students GROUP BY major_id HAVING COUNT(*) < 8;
students=> SELECT major_id, COUNT(*) AS number_of_students FROM students GROUP BY major_id HAVING COUNT(*) < 8;
students=> 
students=> SELECT major_id, COUNT(*) AS number_of_students FROM students GROUP BY major_id HAVING COUNT(*) < 8;
students=> SELECT major_id, COUNT(*) AS number_of_students FROM students GROUP BY major_id HAVING COUNT(*) < 8;
students=> SELECT * FROM students FULL JOIN majors ON students.major_id = majors.major_id;
students=> SELECT * FROM students LEFT JOIN majors ON students.major_id = majors.major_id;
students=> SELECT * FROM students RIGHT JOIN majors ON students.major_id = majors.major_id;
students=> SELECT * FROM students INNER JOIN majors ON students.major_id = majors.major_id;
students=> SELECT * FROM majors LEFT JOIN students ON majors.major_id = students.major_id;
students=> SELECT * FROM majors INNER JOIN students ON majors.major_id = students.major_id;
students=> SELECT * FROM majors RIGHT JOIN students ON majors.major_id = students.major_id;
students=> 
students=> 
students=> SELECT * FROM majors FULL JOIN students ON majors.major_id = students.major_id;
students=> SELECT * FROM students INNER JOIN majors ON students.major_id = majors.major_id;
students=> SELECT major FROM students INNER JOIN majors ON students.major_id = majors.major_id;
students=> SELECT DISTINCT(major) FROM students INNER JOIN majors ON students.major_id = majors.major_id;
students=> SELECT * FROM students RIGHT JOIN majors ON students.major_id = majors.major_id;
students=> SELECT * FROM students RIGHT JOIN majors ON students.major_id = majors.major_id WHERE student_id IS NULL;
students=> SELECT major FROM students RIGHT JOIN majors ON students.major_id = majors.major_id WHERE student_id IS NULL;
students=> SELECT * FROM students LEFT JOIN majors ON students.major_id = majors.major_id;
students=> SELECT * FROM students LEFT JOIN majors ON students.major_id = majors.major_id WHERE major='Data Science' OR gpa >= 3.8;
students=> SELECT first_name, last_name, major, gpa FROM students LEFT JOIN majors ON students.major_id = majors.major_id WHERE major='Data Science' OR gpa >= 3.8;
students=> SELECT * FROM students FULL JOIN majors ON students.major_id = majors.major_id;
students=> SELECT * FROM students FULL JOIN majors ON students.major_id = majors.major_id WHERE first_name LIKE '%ri%' OR major LIKE '%ri%';
students=> SELECT first_name, major FROM students FULL JOIN majors ON students.major_id = majors.major_id WHERE first_name LIKE '%ri%' OR major LIKE '%ri%';
students=> 
students=> SELECT * FROM students FULL JOIN majors ON students.major_id = majors.major_id;
students=> 
students=> SELECT students.major_id FROM students FULL JOIN majors ON students.major_id = majors.major_id;
students=> SELECT students.major_id FROM students FULL JOIN majors AS m ON students.major_id = m.major_id;
students=> SELECT s.major_id FROM students AS s FULL JOIN majors AS m ON s.major_id = m.major_id;
students=> SELECT * FROM students FULL JOIN majors USING(major_id);
students=> SELECT * FROM students FULL JOIN majors USING(major_id) FULL JOIN majors_courses USING(major_id);
students=> SELECT * FROM students FULL JOIN majors USING(major_id) FULL JOIN majors_courses USING(major_id) FULL JOIN courses USING(course_id);
